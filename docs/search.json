[
  {
    "objectID": "GroupAMain.html",
    "href": "GroupAMain.html",
    "title": "ST558 Project 1: Group A",
    "section": "",
    "text": "Loading required libraries, include = FALSE.\n\nAPI Call\n\napi call\n\nPums_APIdata &lt;- function(year=2022, num_variables =c(\"AGEP\",\"PWGTP\"),cat_variables=\"SEX\",geography=\"ALL\",Opt_subset){\n   #Year Range Check\n  if (year &lt; 2010 | year &gt; 2022){\n    print(\"Invalid Year.  Acceptable year range: 2010-2022.\")}\n  #TODO: add error checking for numeric/categorical/geography\n  \n  \n  #API key here:\n  API_key&lt;-\"2b989c8e8efa3003c17e6eb0ca728a968e04a441\" \n  #Automatically capitalize our variables\n  num_variables&lt;-toupper(num_variables)\n  cat_variables&lt;-toupper(cat_variables)\n  geography&lt;-toupper(geography)\n  #Adding num/cat variables to our url\n  variables_url&lt;-paste(c(num_variables,cat_variables),collapse=\",\")\n  #Base URL w/ year variable\n  base_pums_url &lt;-paste(\"https://api.census.gov/data/\",year,\"/acs/acs1/pums?get=\",variables_url,sep=\"\")\n  #Adding geography to URL\n  if (geography == \"ALL\"){\n    geo_url &lt;- paste(base_pums_url,\"&SCHL=24&key=\",API_key,sep=\"\")}\n    else if (geography == \"REGION\"){\n      geo_url &lt;- paste(base_pums_url,\"&for=region:*&SCHL=24&key=\",API_key,sep=\"\")}\n    else if (geograph == \"DIVISION\"){\n      geo_url &lt;- paste(base_pums_url,\"for=division:*&SCHL=24&key=\",API_key,sep=\"\")}\n    else if (geography == \"STATE\"){\n      geo_url &lt;- paste(base_pums_url,\"&for=state:*&SCHL=24&key=\",API_key,sep=\"\")}\n  \n  #API Fetch:\n  pums_fetch &lt;- httr::GET(geo_url)\n  #Decoding data\n  pums_df &lt;- fromJSON(rawToChar(pums_fetch$content))\n  pums_tibble &lt;-as_tibble(pums_df)\n  \n  #TODO: Clean data.  Fix column names etc...\n  \n  \n  #change return to cleaned dataframe.\n  return(pums_tibble)\n  \n  #Just a test: delete later\n  print(geo_url)\n  print(num_variables)\n  print(cat_variables)\n}\n\nTesting exception cases:\n\nPums_APIdata(2009)\n\n[1] \"Invalid Year.  Acceptable year range: 2010-2022.\"\n\n\nWarning: The `x` argument of `as_tibble.matrix()` must have unique column names if\n`.name_repair` is omitted as of tibble 2.0.0.\nℹ Using compatibility `.name_repair`.\n\n\n# A tibble: 25,894 × 4\n   V1    V2    V3    V4   \n   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n 1 AGEP  PWGTP SEX   SCHL \n 2 43    68    1     24   \n 3 73    91    2     24   \n 4 73    47    1     24   \n 5 52    61    1     24   \n 6 68    110   1     24   \n 7 45    80    2     24   \n 8 57    109   2     24   \n 9 68    74    1     24   \n10 58    122   2     24   \n# ℹ 25,884 more rows\n\nPums_APIdata(2012)  \n\n# A tibble: 27,782 × 4\n   V1    V2    V3    V4   \n   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n 1 AGEP  PWGTP SEX   SCHL \n 2 29    46    1     24   \n 3 46    45    2     24   \n 4 61    53    2     24   \n 5 65    45    2     24   \n 6 33    63    1     24   \n 7 32    61    2     24   \n 8 68    90    2     24   \n 9 68    56    1     24   \n10 32    50    2     24   \n# ℹ 27,772 more rows"
  }
]